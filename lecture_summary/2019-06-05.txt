상품 테이블 작성

sqlplus spring/1234

create table product(
product_id number,
product_name varchar2(50),
price number default 0,
description clob,
picture_url varchar2(500),
primary key(product_id)
);

clob : 최대 4G 입력 가능, 한 테이블에서 여러 컬럼에 사용 가능, 검색 가능.
long : 최대 2G 입력 가능, 한 테이블에서 한 개 컬럼만 사용 가능, 검색 불가능.

데이터 삽입
insert into product values (1, '레몬', 1500, '레몬에 포함된 구연산은 피로회복에 좋습니다. 비타민 c도 풍부합니다.', 'lemon.jpg');
insert into product values (2, '오렌지', 2000, '비타민 C가 풍부합니다. 생과일 쥬스로 마시면 좋습니다.','orange.jpg');
insert into product values (3, '키위', 3000, '비타민 C가 풍부합니다. 키위는 너무 셔요.', 'kiwi.jpg');
insert into product values (4, '포도', 5000, '폴리페놀을 다량 함류하고 있어 항산화 작용을 합니다.', 'grape.jpg');
insert into product values (5, '딸기', 8000, '비타민 C나 플라보노이드를 다량 함유하고 있습니다.', 'strawberry.jpg');
insert into product values (6, '귤', 6000, '시네피린을 함유하고 있어 감기 예방에 좋습니다.', 'tangerine.jpg');

상품 코드를 위한 시퀀스를 생성 (autoincrement역할 table이 아님)
create sequence seq_product
start with 10
increment by 1;

시퀀스를 사용해 데이터 입력
insert into product values (seq_product.nextval, '사과', 1500, '맛있는 사과에요.', 'apple.jpg');


프로젝트 설정

버전확인

-프로젝트 팩틏
-라이브러리
-컴파일러 


파일 복사
src/pom.xml
src/main/resources/mappers/sampleMapper.xml
src/main/log4j.xml
src/main/log4jdbc.log4j.properties
src/main/logback.xml
src/main/mybatis-config.xml
src/main/webapp/WEB-INF/web.xml
src/main/webapp/WEB-INF/spring/servlet-context.xml
src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml

src/main/webapp/WEB-INF/spring/appSerclet/servlet-context.xml에서 
					프로젝트에 맞는 이름으로 수정

---------------------------------------------------------------------------
http://mvnrepository.com에서

파일 업로드 라이브러리

commons-fileupload 검색


썸네일 생성 라이브러리
imgscalr 검색

pom.xml에 추가

servlet-context.xml 에

<!-- 파일 업로드 관련 라이브러리 -->
<!-- https://mvnrepository.com/artifact/commons-fileupload/commons-fileupload -->
<dependency>	
<groupId>commons-fileupload</groupId>
<artifactId>commons-fileupload</artifactId>
<version>1.4</version>
</dependency>

<!-- 이미지 썸네일을 만들어 주는 라이브러리 -->
<!-- https://mvnrepository.com/artifact/org.imgscalr/imgscalr-lib -->
<dependency>
<groupId>org.imgscalr</groupId>
<artifactId>imgscalr-lib</artifactId>
<version>4.2</version>
</dependency>



<!-- 파일 업로드에 필요한 bean -->
<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
<!-- 파일 업로드 최대용량 -->
<beans:property name="maxUploadSize" value="10485760"></beans:property>
</beans:bean>

<!-- 파일 업로드를 위한 디렉토리 설정 -->
<!-- String uploadPath = new Spring("d:/seong/upload"); -->
<beans:bean id="uploadPath" class="java.lang.String">
<beans:constructor-arg value="d:/seong/upload"></beans:constructor-arg>
</beans:bean>
추가

-----------------------------------------------------------------------------------

상품관리 실습 예제

일반 사용자 : 상품 목록 보기, 장바구니 담기, 장바구니보기 

관리자 : 상품 등록, 상품 수정/삭제


1. java/com.product.spring.model.shop.dto/ProductDTO.java
2. java/com.product.spring.model.shop.dao/ProductDAO.java	-인터페이스
3. resources/mapper/ProductMapper.xml
4. java/com.product.spring.shop.service/ProductService.java	-인터페이스
5. java/com.product.spring.model.shop.dao/ProductDAOImple.java
6. java/com.product.spring.shop.service/ProductServiceImpl.java
7. java/com/product.spring.controller/ProductController.java