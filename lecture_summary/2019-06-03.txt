jdk와 spring의 호환
jdk 8 + spring 5.x
jdk 6 + spring 4.x
jdk 4 + spring 3.x

--------------------------------------------------------------------

오라클 계정 생성

-관리자 권한으로 접근
sqlplus / as sysdba

-작업할 워크 스페이스 작성
create tablespace spring
datafile 'd:/seong/work1/spring.dbf'size 50m
autoextend on
next 10m
maxsize unlimited;

-사용자 계정 만들기
create user spring indentified by 1234
default tablesapce spring;

-사용자 계정 삭제
drop user spring cascade;

-사용자 권한 부여
grant connect, resource, dba to spring;

conn spring/1234
show user;


------------------------------------------------------------------------
jackson-databind
(https://mvnrepository.com/search?q=jackson-databind)

위 코드에서 자료가 리턴할 때 xml형식이나 json 형식으로 리턴된다는 것을 알려주어야 함

xml< > < />

json형식 { "name":"냉장고","price":5000 }

json형식의 String 형식으로 전달해 주는 라이브러리를 추가해야 함

------------------------------------------------------------------
spring 과 mybatis 연동

로깅툴을 사용하는 이유

- System.out.println() : IO 리소스를 많이 사용하여 시스템이 느려짐
			 로그를 파일로 저장하여 분석할 필요가 있음

-로깅툴의 종류 
  *commons-logging : spring3 에서 주로 사용
  *log4j : 효율적인 메모리 관리로,  많이 사용되어옴
  *logback : log4j보다 성능이 더 우수하며 최근에 많이 사용됨
  *SLF4J : logback을 사용하기 위한 인터페이스

로그를 수집할 클래스 변수 선언
private static final Logger logger = LoggerFactory.getLogger(클래스이름.class)

static final : 로그 내용이 바뀌지 않도록 지정


 로그의 레벨
Debug	: Debug, Info, Warn, Error 포함
Infot	: Info, Warn, Error 포함
Warn	: Warn, Error 포함
Error	: Error 포함

----------------------------------------------------------------------------
데이터 맵퍼인 마이바트스를 사용하는 이유
-자바코드에 데이터베이스 연결 문자열 등의 중요한 정보가 직접 입력하는 것은
 보안상 안전하지 않음

----------------------------
회원관리 예제

-전체적인 구성도

Controller - MemberConroller.java

Mode	 - 	MemberDAO.java 		인터페이스
		MomberDAOImpl.java	구현 클래스
		MemberDTO.java		인터페이스
		memberMapper.xml	SQL 맵퍼

View	 - 	member_list.jsp
		wrute.jsp
		view.jsp

Service	 - 	MemberService.java	인터페이스
		MemberServicImpl.java	구현 클래스

Service의 역할
컨트롤러와 모델 사이에 존재하며, 현업에서 주로 사용
서비스는 하나인데 Model메서드가 여러개일때 트랜잭션 처리를 위해 사용


-----------------------------------------------------------------------

sqlplus spring/1234

 - member 테이블 생성
create table member(
userid varchar2(50) not null primary key,
passwd varchar2(50) not null,
name varchar2(50) not null,
email varchar2(50),
join_date date default sysdate
);

insert into member (userid, passwd, name, email)
values ('kim', '1234', 'gim', 'abc@naver.com');

commit;